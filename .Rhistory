levels = c("Female.1", "Female.0", "Male.1", "Male.0")),
score_survival = factor(interaction(score, Survival),
levels = c("1.1", "1.0", "2.1", "2.0", "3.1")))
ggplot(data)+
geom_histogram(aes(x = score, fill = score_survival), stat = "count", position = "fill")+
theme_classic() +
scale_fill_manual(values = c("#8a9a9a", "#c4cfcf",
"#767676", "#b8b8b8",
"#887d6d"),
labels = c("1-Survived", "1-Died",
"2-Survived", "2-Died",
"3-Survived"),
name = "Survival") +
facet_wrap(~period) +
xlab("Handling score") +
ylab("Proportion")
# read in data
data <- read_csv("data_table.csv", show_col_types = FALSE) %>%
# drop Star and Daisy
filter(!bird %in% c("Daisy", "Star")) %>%
# rename period labels to look nicer on graphs
rename("90 days" = to_90,
"1 year" = to_360) %>%
# pivot wider on period
pivot_longer(3:4, names_to = "period", values_to = "survived") %>%
rename(Survival = survived) %>%
# survival as factors
mutate(period = as_factor(period),
Survival = factor(Survival, levels = c("1", "0"))) %>%
# add interaction factors for colour scales
mutate(sex_survival = factor(interaction(sex, Survival),
levels = c("Female.1", "Female.0", "Male.1", "Male.0")))
ggplot(data)+
geom_histogram(aes(x = score, fill = Survival), stat = "count", position = "fill")+
theme_classic() +
scale_fill_manual(values = c("gray", "gray5"),
labels = c("Survived", "Died"),
name = "Survival") +
facet_wrap(~period) +
xlab("Handling score") +
ylab("Proportion")
ggplot(data)+
geom_histogram(aes(x = sex, fill = sex_survival), stat = "count", position = "fill")+
theme_classic() +
scale_fill_manual(values = c("#298c8c", "#89a3a3",
"#f1a226", "#d5b980"),
labels = c("Female-Survived", "Female-Died",
"Male-Survived", "Male-Died"),
name = "Sex and Survival") +
facet_wrap(~period) +
xlab("Sex") +
ylab("Proportion")
ggplot(data)+
geom_histogram(aes(x = sex, fill = sex_survival), stat = "count", position = "fill")+
theme_classic() +
scale_fill_manual(values = c("#298c8c", "#0a4545",
"#f1a226", "#755214"),
labels = c("Female-Survived", "Female-Died",
"Male-Survived", "Male-Died"),
name = "Sex and Survival") +
facet_wrap(~period) +
xlab("Sex") +
ylab("Proportion")
ggplot(data)+
geom_histogram(aes(x = sex, fill = sex_survival), stat = "count", position = "fill")+
theme_classic() +
scale_fill_manual(values = c("#298c8c", "#002a2a",
"#f1a226", "#3d2a09"),
labels = c("Female-Survived", "Female-Died",
"Male-Survived", "Male-Died"),
name = "Sex and Survival") +
facet_wrap(~period) +
xlab("Sex") +
ylab("Proportion")
ggplot(data)+
geom_histogram(aes(x = sex, fill = sex_survival), stat = "count", position = "fill")+
theme_classic() +
scale_fill_manual(values = c("#298c8c", "#001a1a",
"#f1a226", "#1f1500"),
labels = c("Female-Survived", "Female-Died",
"Male-Survived", "Male-Died"),
name = "Sex and Survival") +
facet_wrap(~period) +
xlab("Sex") +
ylab("Proportion")
g4 <- ggplot(data, aes(x = Survival, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = interaction(Survival, sex, period)),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = interaction(Survival, sex, period)),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
scale_colour_manual(values = c("#298c8c", "#f1a226"))+
xlab(element_blank()) +
theme_classic()+
scale_x_discrete(labels = c("Died", "Survived"))+
ggplot2::theme(axis.title.y = element_text(size = 11))
g4
# arrange multi plot
ggarrange(g1, g2, g3, g4, g5, g6,
ncol = 2, nrow = 3,
labels = c("A", "B", "C", "D", "E", "F"),
common.legend = TRUE,
legend = "bottom")
g5 <- ggplot(data)+
geom_histogram(aes(x = score, fill = Survival), stat = "count", position = "fill")+
theme_classic() +
scale_fill_manual(values = c("gray", "gray5"),
labels = c("Survived", "Died"),
name = "Survival") +
facet_wrap(~period) +
xlab("Handling score") +
ylab("Proportion")
g6 <- ggplot(data)+
geom_histogram(aes(x = sex, fill = sex_survival), stat = "count", position = "fill")+
theme_classic() +
scale_fill_manual(values = c("#298c8c", "#001a1a",
"#f1a226", "#1f1500"),
labels = c("Female-Survived", "Female-Died",
"Male-Survived", "Male-Died"),
name = "Sex and Survival") +
facet_wrap(~period) +
xlab("Sex") +
ylab("Proportion")
# arrange multi plot
ggarrange(g1, g2, g3, g4, g5, g6,
ncol = 2, nrow = 3,
labels = c("A", "B", "C", "D", "E", "F"),
common.legend = TRUE,
legend = "bottom")
# arrange multi plot
ggarrange(g1, g2, g3, g4, g5, g6,
ncol = 2, nrow = 3,
labels = c("A", "B", "C", "D", "E", "F"),
legend = "bottom")
# arrange multi plot
ggarrange(g1, g2, g3, g4, g5, g6,
ncol = 2, nrow = 3,
labels = c("A", "B", "C", "D", "E", "F"),
common.legend = TRUE,
legend = "bottom")
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") +   # Collect all legends
plot_annotation(theme = theme(legend.position = "bottom"))
# Load packages
pacman::p_load(beepr, contsurvplot, ggmosaic, ggpubr, janitor, MuMIn, patchwork, performance, readxl, sjPlot, survival, survminer, tidyverse)
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") +   # Collect all legends
plot_annotation(theme = theme(legend.position = "bottom"))
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect")
combined_plot
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") & theme(legend.position = 'bottom')
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") & ggplot2::theme(legend.position = 'bottom')
combined_plot
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect")
combined_plot
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A')
combined_plot
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") +
ggplot2::theme = theme(
legend.position = c(1, 0),     # Position the legend at bottom-right
legend.justification = c(1, 0), # Anchor point for the legend
legend.box.just = "right")
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") + & ggplot2::theme(
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") + & theme(
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") & theme(
legend.position = c(1, 0),     # Position the legend at bottom-right
legend.justification = c(1, 0), # Anchor point for the legend
legend.box.just = "right")
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") & ggplot2::theme(
legend.position = c(1, 0),     # Position the legend at bottom-right
legend.justification = c(1, 0), # Anchor point for the legend
legend.box.just = "right")
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") & ggplot2::theme(
legend.position.inside = c(1, 0),     # Position the legend at bottom-right
legend.justification = c(1, 0), # Anchor point for the legend
legend.box.just = "right")
plot_annotation(tag_levels = 'A')
combined_plot
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") & ggplot2::theme(
legend.position.inside = c(1, 0),     # Position the legend at bottom-right
legend.justification = c(1, 0)) # Anchor point for the legend
combined_plot
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A')
combined_plot
# default theme options for all plots
theme <- function(){
list(
geom_violin(),
geom_point(),
facet_wrap(~period),
xlab(element_blank()),
theme_classic(),
scale_x_discrete(labels = c("Died", "Survived")),
ggplot2::theme(axis.title.y = element_text(size = 11))
)
}
# list of plots
g1 <- ggplot(data, aes(Survival, latency))+
ylab("Latency to reach food (s)")+
theme()
g2 <- ggplot(data, aes(Survival, alert))+
ylab("Time spent alert %")+
theme()
g3 <- ggplot(data, aes(Survival, weight))+
ylab("Pre-release weight (g)")+
theme()
g4 <- ggplot(data, aes(x = Survival, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = interaction(Survival, sex, period)),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = interaction(Survival, sex, period)),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
scale_colour_manual(values = c("#298c8c", "#f1a226"))+
xlab(element_blank()) +
theme_classic()+
scale_x_discrete(labels = c("Died", "Survived"))+
ggplot2::theme(axis.title.y = element_text(size = 11))
g5 <- ggplot(data)+
geom_histogram(aes(x = score, fill = Survival), stat = "count", position = "fill")+
theme_classic() +
scale_fill_manual(values = c("gray", "gray5"),
labels = c("Survived", "Died"),
name = "Survival") +
facet_wrap(~period) +
xlab("Handling score") +
ylab("Proportion")+
ggplot2::theme(axis.title.y = element_text(size = 11))
g6 <- ggplot(data)+
geom_histogram(aes(x = sex, fill = sex_survival), stat = "count", position = "fill")+
theme_classic() +
scale_fill_manual(values = c("#298c8c", "#001a1a",
"#f1a226", "#1f1500"),
labels = c("Female-Survived", "Female-Died",
"Male-Survived", "Male-Died"),
name = "Sex and Survival") +
facet_wrap(~period) +
xlab("Sex") +
ylab("Proportion")+
ggplot2::theme(axis.title.y = element_text(size = 11))
# arrange multi plot - moved from ggarrange to patchwork, seems to work better
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A')
combined_plot
g5 <- ggplot(data)+
geom_histogram(aes(x = score, fill = Survival), stat = "count", position = "fill")+
theme_classic() +
scale_fill_manual(values = c("gray", "gray5"),
labels = c("Survived", "Died"),
name = "Survival") +
facet_wrap(~period) +
xlab("Handling score") +
ylab("Survival proportion")+
ggplot2::theme(axis.title.y = element_text(size = 11))
g6 <- ggplot(data)+
geom_histogram(aes(x = sex, fill = sex_survival), stat = "count", position = "fill")+
theme_classic() +
scale_fill_manual(values = c("#298c8c", "#001a1a",
"#f1a226", "#1f1500"),
labels = c("Female-Survived", "Female-Died",
"Male-Survived", "Male-Died"),
name = "Sex and Survival") +
facet_wrap(~period) +
xlab("Sex") +
ylab("Survival proportion")+
ggplot2::theme(axis.title.y = element_text(size = 11))
# arrange multi plot - moved from ggarrange to patchwork, seems to work better
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A')
combined_plot
ggplot2::theme(axis.title.y = element_text(size = 11))
g4 <- ggplot(data, aes(x = Survival, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = interaction(Survival, sex, period)),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = interaction(Survival, sex, period)),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
scale_colour_manual(values = c("#298c8c", "#f1a226"),
labels = c("Died", "Survived",
name = "Sex"))+
xlab(element_blank()) +
theme_classic()+
ggplot2::theme(axis.title.y = element_text(size = 11))
# arrange multi plot - moved from ggarrange to patchwork, seems to work better
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A')
combined_plot
g4 <- ggplot(data, aes(x = Survival, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = interaction(Survival, sex, period)),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = interaction(Survival, sex, period)),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
scale_colour_manual(values = c("#298c8c", "#f1a226"),
name = "Sex")+
xlab(element_blank()) +
theme_classic()+
scale_x_discrete(labels = c("Died", "Survived"))+
ggplot2::theme(axis.title.y = element_text(size = 11))
# arrange multi plot - moved from ggarrange to patchwork, seems to work better
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A')
combined_plot
g6 <- ggplot(data)+
geom_histogram(aes(y = sex, fill = sex_survival), stat = "count", position = "fill")+
theme_classic() +
scale_fill_manual(values = c("#298c8c", "#001a1a",
"#f1a226", "#1f1500"),
labels = c("Female-Survived", "Female-Died",
"Male-Survived", "Male-Died"),
name = "Sex and Survival") +
facet_wrap(~period) +
xlab("Sex") +
ylab("Survival proportion")+
ggplot2::theme(axis.title.y = element_text(size = 11))
g6
g6 <- ggplot(data)+
geom_histogram(aes(x = sex, fill = sex_survival), stat = "count", position = "fill")+
theme_classic() +
scale_fill_manual(values = c("#298c8c", "#001a1a",
"#f1a226", "#1f1500"),
labels = c("Female-Survived", "Female-Died",
"Male-Survived", "Male-Died"),
name = "Sex and Survival") +
facet_wrap(~period) +
xlab("Sex") +
ylab("Survival proportion")+
ggplot2::theme(axis.title.y = element_text(size = 11))
# arrange multi plot - moved from ggarrange to patchwork, seems to work better
combined_plot <- (g1 + g2) / (g3 + g4) / (g5 + g6) +
plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A')
combined_plot
# fit survival curves
latency <- survfit(Surv(Surv(time, status) ~ sqrt(latency), km, x= TRUE))
# fit survival curves
latency <- survfit(Surv(Surv(time, status) ~ sqrt(latency), km))
# fit survival curves
latency <- survfit(Surv(Surv(time, status) ~ sqrt(latency), km, data = data))
# fit survival curves
latency <- survfit(Surv(Surv(time, status) ~ sqrt(latency), data = data))
# fit survival curves
latency <- survfit(Surv(time, status) ~ sqrt(latency), data)
View(data)
# format data for survival analysis
km <- data %>%
mutate(time = persist,
status = ifelse(to_360 == 0, 1, 0),
sex = as.factor(sex),
condition = as.factor(condition),
score = as.factor(score)) %>%
select(-c(persist, to_90, to_360))
# format data for survival analysis
data2 <- data <- read_csv("data_table.csv", show_col_types = FALSE) %>%
# drop Star and Daisy
filter(!bird %in% c("Daisy", "Star")) %>%
mutate(time = persist,
status = ifelse(to_360 == 0, 1, 0),
sex = as.factor(sex),
condition = as.factor(condition),
score = as.factor(score)) %>%
select(-c(persist, to_90, to_360))
View(data2)
# fit survival curves
latency <- survfit(Surv(time, Survival) ~ sqrt(latency), data2)
# fit survival curves
latency <- survfit(Surv(time, status) ~ sqrt(latency), data2)
ggsurvplot(latency, data2)
# and separately format data for survival analysis
data2 <- data <- read_csv("data_table.csv", show_col_types = FALSE) %>%
# drop Star and Daisy
filter(!bird %in% c("Daisy", "Star")) %>%
mutate(time = persist,
status = ifelse(to_360 == 0, 1, 0),
sex = factor(sex),
score = factor(score)) %>%
select(-c(persist, to_90, to_360))
# fit survival curves
latency <- survfit(Surv(time, status) ~ sqrt(latency), data2)
ggsurvplot(latency, data2)
# fit survival curves
latency <- coxph(Surv(time, status) ~ sqrt(latency), data2, x= TRUE)
ggsurvplot(latency, data2)
survminer::ggsurvplot(latency, data2)
ggsurvplot(latency)
ggsurvplot(latency, data = data2)
# fit survival curves
latency <- coxph(Surv(time, status) ~ sqrt(latency), data2, x= TRUE)
latency
# and separately format data for survival analysis
data2 <- data <- read_csv("data_table.csv", show_col_types = FALSE) %>%
# drop Star and Daisy
filter(!bird %in% c("Daisy", "Star")) %>%
mutate(time = persist,
status = ifelse(to_360 == 0, 1, 0),
sex = factor(sex),
score = factor(score)) %>%
select(-c(persist, to_90, to_360))
# fit survival curves
latency <- survfit(Surv(time, status) ~ sqrt(latency), data2)
ggsurvplot(latency, data2)
# fit survival curves
latency <- survfit(Surv(time, status) ~ sqrt(latency), data2, x = TRUE)
# fit survival curves
latency <- survfit(Surv(time, status) ~ sqrt(latency), data2, x = TRUE)
m10 <- coxph(Surv(time, status) ~ sqrt(latency), km, x= TRUE)
# Plot the survival area
plot_surv_area(model = m10, data = km,
time = "time", status = "status", variable = "latency", group = NULL)
# and with survminer for ggplot
survminer::ggsurvplot(fit = m10, data = km)
# Load packages
pacman::p_load(beepr, contsurvplot, ggpubr, janitor, MuMIn, patchwork, performance, readxl, sjPlot, survival, survminer, tidyverse)
# and with survminer for ggplot
ggsurvplot(fit = m10, data = km)
# Load packages
pacman::p_load(beepr, contsurvplot, ggpubr, janitor, MuMIn, patchwork, performance, readxl, sjPlot, survival, survminer, tidyverse)
# read in data
data <- read_csv("data_table.csv", show_col_types = FALSE) %>%
# drop Star and Daisy
filter(!bird %in% c("Daisy", "Star")) %>%
# rename period labels to look nicer on graphs
rename("90 days" = to_90,
"1 year" = to_360) %>%
# pivot wider on period
pivot_longer(3:4, names_to = "period", values_to = "survived") %>%
rename(Survival = survived) %>%
# survival as factors
mutate(period = as_factor(period),
Survival = factor(Survival, levels = c("1", "0"))) %>%
# add interaction factors for colour scales
mutate(sex_survival = factor(interaction(sex, Survival),
levels = c("Female.1", "Female.0", "Male.1", "Male.0")))
# read in data
data <- read_csv("data_table.csv", show_col_types = FALSE) %>%
# drop Star and Daisy
filter(!bird %in% c("Daisy", "Star")) %>%
# rename period labels to look nicer on graphs
rename("90 days" = to_90,
"1 year" = to_360) %>%
# pivot wider on period
pivot_longer(3:4, names_to = "period", values_to = "survived") %>%
rename(Survival = survived) %>%
# survival as factors
mutate(period = as_factor(period),
Survival = factor(Survival, levels = c("1", "0"))) %>%
# add interaction factors for colour scales
mutate(sex_survival = factor(interaction(sex, Survival),
levels = c("Female.1", "Female.0", "Male.1", "Male.0")))
# and separately format data for survival analysis
data2 <- data <- read_csv("data_table.csv", show_col_types = FALSE) %>%
# drop Star and Daisy
filter(!bird %in% c("Daisy", "Star")) %>%
mutate(time = persist,
status = ifelse(to_360 == 0, 1, 0),
sex = factor(sex),
score = factor(score)) %>%
select(-c(persist, to_90, to_360))
# fit survival curves
latency <- survfit(Surv(time, status) ~ sqrt(latency), data2, x = TRUE)
# fit survival curves
latency <- survfit(Surv(time, status) ~ sqrt(latency), data2)
ggsurvplot(latency, data2)
m10 <- coxph(Surv(time, status) ~ sqrt(latency), data2, x= TRUE)
# Plot the survival area
plot_surv_area(model = m10, data = km,
time = "time", status = "status", variable = "latency", group = NULL)
# Plot the survival area
plot_surv_area(model = m10, data = data2,
time = "time", status = "status", variable = "latency", group = NULL)
# and with survminer for ggplot
ggsurvplot(fit = m10, data = km)
# and with survminer for ggplot
ggsurvplot(fit = m10, data = data2)
# Plot the survival area
plot_surv_area(model = m10, data = data2,
time = "time", status = "status", variable = "latency", group = NULL) %>%
ggsurvplot()
# and with survminer for ggplot
survminer::ggsurvplot(fit = m10, data = data2)
# and with survminer for ggplot
survminer::ggsurvplot(m10, data = data2)
install.packages('survminer')
install.packages("survminer")
install.packages('survminer')
library(survminer)
# and with survminer for ggplot
survminer::ggsurvplot(m10, data = data2)
library(installr)
updateR()
