pacman::p_load(adehabitatHR, amt, atlastools, beepr, ggmap, ggpubr, glmmTMB, gtools, janitor, lme4, move2, moveHMM, progressr, performance, SDLfilter, segclust2d, sf, solitude, suncalc, survival, survminer, readr, readxl, terra, tidyterra, tidyverse, wildlifeDI)
# Read in clean data
data <- read.csv("Processed/GPSdata_clean.csv") %>%
mutate(DateTime = as.POSIXct(DateTime,
"%Y-%m-%d %H:%M:%S",tz = "Australia/Melbourne"),
date = as.Date(DateTime, tz = "Australia/Melbourne"))
setwd("C:/Users/shosh/OneDrive/2 PhD/GIT/Bush-stone-curlew-personality-and-performance")
setwd("C:/Users/shosh/OneDrive/2 PhD/GIT/Bush-stone-curlew-personality-and-performance")
# Read in clean data
data <- read.csv("Processed/GPSdata_clean.csv") %>%
mutate(DateTime = as.POSIXct(DateTime,
"%Y-%m-%d %H:%M:%S",tz = "Australia/Melbourne"),
date = as.Date(DateTime, tz = "Australia/Melbourne"))
head(data)
# Write out cleaned data
write.csv(data, "Processed/GPSdata_clean.csv", row.names = FALSE)
# Calculate if time is pre/post dawn/dusk
suntime <- getSunlightTimes(date = unique(data$date),
lat = -37.90,
lon = 144.43,
keep = c("dawn", "dusk"),
tz = "Australia/Melbourne") %>%
subset(select = -c(lat, lon))
pacman::p_load(adehabitatHR, amt, atlastools, beepr, ggmap, ggpubr, glmmTMB, gtools, janitor, lme4, move2, moveHMM, progressr, performance, SDLfilter, segclust2d, sf, solitude, suncalc, survival, survminer, readr, readxl, terra, tidyterra, tidyverse, wildlifeDI)
# Read in clean data
data <- read.csv("Processed/GPSdata_clean.csv") %>%
mutate(DateTime = as.POSIXct(DateTime,
"%Y-%m-%d %H:%M:%S",tz = "Australia/Melbourne"),
date = as.Date(DateTime, tz = "Australia/Melbourne"))
# Calculate if time is pre/post dawn/dusk
suntime <- getSunlightTimes(date = unique(data$date),
lat = -37.90,
lon = 144.43,
keep = c("dawn", "dusk"),
tz = "Australia/Melbourne") %>%
subset(select = -c(lat, lon))
# Append to data frame
data_sun <- left_join(data, suntime) %>%
mutate(tod = ifelse(DateTime>dawn & DateTime<dusk, "day", "night"))
# Save day data
data_day <- data_sun %>%
filter(tod == "day")
write.csv(data_day, "Processed/GPSdata_clean_day.csv", row.names = FALSE)
ggplot(data_day)+
geom_point(aes(lon, lat, colour = id))
# Save night data
data_night <- data_sun %>%
filter(tod == "night")
write.csv(data_night, "Processed/GPSdata_clean_night.csv", row.names = FALSE)
ggplot(data_night)+
geom_point(aes(lon, lat, colour = id))
View(data_day)
# Save day data
data_day <- data_sun %>%
filter(tod == "day") %>%
rearrage(DateTime, after = tod)
# Save day data
data_day <- data_sun %>%
filter(tod == "day") %>%
relocate(DateTime, after = tod)
View(data_day)
# Save day data
data_day <- data_sun %>%
filter(tod == "day") %>%
relocate(DateTime, .after = tod)
View(data_day)
# temp
smooth <- read.csv("Processed/GPSdata_smoothed.csv")
head(smooth)
# temp
smooth <- read.csv("Processed/GPSdata_smoothed.csv") %>%
select(-c("Verdict", "Verdict_IF", "date"))
head(smooth)
# Save to file
write.csv(smooth, "Processed/GPSdata_smoothed.csv", row.names = FALSE)
# Briar
briar <- subset(smooth, id == "Briar") %>%
filter(lon < 144.448) %>%
filter(lat < -37.892 | lon < 144.42) %>%
filter(lon > 144.439 | lat < -37.894)
# Koda
koda <- subset(smooth, id == "Koda") %>%
filter(lat < -37.892 & lon < 144.444)
# Prem
prem <- subset(smooth, id == "Prem") %>%
filter(lat < -37.893) %>%
filter(lon > 144.430 | lat < -37.897) %>%
filter(lon < 144.442 | lat > -37.901)
# Robin
robin <- subset(smooth, id == "Robin") %>%
filter(lat < -37.892) %>%
filter(lon < 144.448 | lat < -37.895) %>%
filter(lon > 144.435 | lat < -37.894) %>%
filter(lon > 144.429 | lat < -37.901)
# Replace the 4 birds above in the smooth data
smooth2 <- smooth %>%
filter(!id %in% c("Briar", "Koda", "Prem", "Robin")) %>%
rbind(briar, koda, prem, robin)
head(smooth2)
# Write out cleaned data
write.csv(smooth2, "Processed/GPSdata_clean.csv", row.names = FALSE)
# Read in clean data
data <- read.csv("Processed/GPSdata_clean.csv") %>%
mutate(DateTime = as.POSIXct(DateTime,
"%Y-%m-%d %H:%M:%S",tz = "Australia/Melbourne"),
date = as.Date(DateTime, tz = "Australia/Melbourne"))
# Calculate if time is pre/post dawn/dusk
suntime <- getSunlightTimes(date = unique(data$date),
lat = -37.90,
lon = 144.43,
keep = c("dawn", "dusk"),
tz = "Australia/Melbourne") %>%
subset(select = -c(lat, lon))
# Append to data frame
data_sun <- left_join(data, suntime) %>%
mutate(tod = ifelse(DateTime>dawn & DateTime<dusk, "day", "night"))
ggplot(data_sun)+
geom_point(aes(lon, lat, colour = tod))
head(data_sun)
View(data_sun)
# Calculate if time is pre/post dawn/dusk
suntime <- getSunlightTimes(date = unique(data$date),
lat = -37.90,
lon = 144.43,
keep = c("dawn", "dusk"),
tz = "Australia/Melbourne") %>%
subset(select = -c(lat, lon)) %>%
relocate(DateTime, .after = tod)
# Read in clean data
data <- read.csv("Processed/GPSdata_clean.csv") %>%
mutate(DateTime = as.POSIXct(DateTime,
"%Y-%m-%d %H:%M:%S",tz = "Australia/Melbourne"),
date = as.Date(DateTime, tz = "Australia/Melbourne"))
pacman::p_load(adehabitatHR, amt, atlastools, beepr, ggmap, ggpubr, glmmTMB, gtools, janitor, lme4, move2, moveHMM, progressr, performance, SDLfilter, segclust2d, sf, solitude, suncalc, survival, survminer, readr, readxl, terra, tidyterra, tidyverse, wildlifeDI)
# Read in clean data
data <- read.csv("Processed/GPSdata_clean.csv") %>%
mutate(DateTime = as.POSIXct(DateTime,
"%Y-%m-%d %H:%M:%S",tz = "Australia/Melbourne"),
date = as.Date(DateTime, tz = "Australia/Melbourne"))
# Calculate if time is pre/post dawn/dusk
suntime <- getSunlightTimes(date = unique(data$date),
lat = -37.90,
lon = 144.43,
keep = c("dawn", "dusk"),
tz = "Australia/Melbourne") %>%
subset(select = -c(lat, lon))
# Append to data frame
data_sun <- left_join(data, suntime) %>%
mutate(tod = ifelse(DateTime>dawn & DateTime<dusk, "day", "night")) %>%
relocate(DateTime, .after = tod)
ggplot(data_sun)+
geom_point(aes(lon, lat, colour = tod))
view(data_sun)
