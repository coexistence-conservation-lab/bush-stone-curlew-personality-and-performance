# list of plots
g1 <- ggplot(data, aes(survived, latency))+
ylab("Latency to reach food (s)")+
theme()
# default theme options for all plots
theme <- function(){
list(
geom_violin(position_dodge(width = 0.9)),
geom_point(position_dodge(width = 0.9)),
facet_wrap(~period),
xlab(element_blank()),
theme_classic(),
ggplot2::theme(axis.title.y = element_text(size = 10))
)
}
# list of plots
g1 <- ggplot(data, aes(survived, latency))+
ylab("Latency to reach food (s)")+
theme()
# default theme options for all plots
theme <- function(){
list(
geom_violin(),
geom_point(),
facet_wrap(~period),
xlab(element_blank()),
theme_classic(),
ggplot2::theme(axis.title.y = element_text(size = 10))
)
}
# list of plots
g1 <- ggplot(data, aes(survived, latency))+
ylab("Latency to reach food (s)")+
theme()
g2 <- ggplot(data, aes(survived, alert))+
ylab("Time spent alert %")+
theme()
g3 <- ggplot(data, aes(survived, weight))+
ylab("Pre-release weight (g)")+
theme()
g4 <- ggplot(data, aes(survived, weight, colour = sex))+
ylab("Pre-release weight (g)")+
theme()+
geom_violin(position_dodge(width = 0.9))+
geom_point(position_dodge(width = 0.9))
g4 <- ggplot(data, aes(survived, weight, colour = sex))+
ylab("Pre-release weight (g)")+
theme()+
geom_violin(aes(position_dodge(width = 0.9)))+
geom_point(position_dodge(width = 0.9))
g4 <- ggplot(data, aes(survived, weight, colour = sex))+
ylab("Pre-release weight (g)")+
theme()+
geom_violin(aes(position_dodge(width = 0.9)))+
geom_point(aes(position_dodge(width = 0.9)))
g4
g4 <- ggplot(data, aes(x = survived, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = sex),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = sex),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
xlab(element_blank()) +
theme_classic() +
theme(axis.title.y = element_text(size = 10))
theme_classic(
g4 <- ggplot(data, aes(x = survived, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = sex),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = sex),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
xlab(element_blank()) +
theme_classic()
)
g4 <- ggplot(data, aes(x = survived, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = sex),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = sex),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
xlab(element_blank()) +
theme_classic()
g4
g4 <- ggplot(data, aes(x = survived, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
xlab(element_blank()) +
theme_classic()
g4
g4 <- ggplot(data, aes(x = survived, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
xlab(element_blank()) +
theme_classic()+
ggplot2::theme(axis.title.y = element_text(size = 10))
# arrange multi plot
ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2,
labels = c("A", "B", "C", "D"),
common.legend = TRUE,
legend="bottom")
# read in data
data <- read_csv("data_table.csv") %>%
# drop Star and Daisy
filter(!bird %in% c("Daisy", "Star")) %>%
# rename period labels to look nicer on graphs
rename("90 days" = to_90,
"1 year" = to_360) %>%
# pivot wider on period
pivot_longer(3:4, names_to = "period", values_to = "survived") %>%
# survival as factors
mutate(period = as_factor(period),
survived = as_factor(survived))
# default theme options for all plots
theme <- function(){
list(
geom_violin(),
geom_point(),
facet_wrap(~period),
xlab(element_blank()),
theme_classic(),
ggplot2::theme(axis.title.y = element_text(size = 10))
)
}
# list of plots
g1 <- ggplot(data, aes(survived, latency))+
ylab("Latency to reach food (s)")+
theme()
g2 <- ggplot(data, aes(survived, alert))+
ylab("Time spent alert %")+
theme()
g3 <- ggplot(data, aes(survived, weight))+
ylab("Pre-release weight (g)")+
theme()
g4 <- ggplot(data, aes(x = survived, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
xlab(element_blank()) +
theme_classic()+
ggplot2::theme(axis.title.y = element_text(size = 10))
# arrange multi plot
ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2,
labels = c("A", "B", "C", "D"),
common.legend = TRUE,
legend="bottom")
# arrange multi plot
ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2,
labels = c("A", "B", "C", "D"),
common.legend = TRUE,
legend="bottom",
legend.justification = "right")
# arrange multi plot
ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2,
labels = c("A", "B", "C", "D"),
common.legend = TRUE,
legend="bottom right")
# list of plots
g1 <- ggplot(data, aes(survived, latency, colour = survived))+
ylab("Latency to reach food (s)")+
theme()
g1
legend <- get_legend(g4)
# arrange multi plot
ggarrange(g1, g2, g3, g4, legend,
ncol = 3, nrow = 2,
labels = c("A", "B", "C", "D"),
common.legend = TRUE,
legend="bottom")
legend
plot(legend)
# arrange multi plot
ggarrange(g1, g2, g3, g4, legend,
ncol = 2, nrow = 3,
layout_matrix=rbind(c(1,2), c(3,4), c(5,5))),
# arrange multi plot
ggarrange(g1, g2, g3, g4, legend,
ncol = 2, nrow = 3,
layout_matrix=rbind(c(1,2), c(3,4), c(5,5)),
labels = c("A", "B", "C", "D", ""))
# arrange multi plot
ggarrange(g1, g2, g3, g4, legend,
ncol = 2, nrow = 3,
labels = c("A", "B", "C", "D", ""))
# arrange multi plot
ggarrange(g1, g2, g3, g4, , legend,
ncol = 2, nrow = 3,
labels = c("A", "B", "C", "D", ""))
# arrange multi plot
ggarrange(g1, g2, g3, g4, legend,
ncol = 2, nrow = 3,
labels = c("A", "B", "C", "D"))
g4 <- ggplot(data, aes(x = survived, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
xlab(element_blank()) +
theme_classic()+
ggplot2::theme(axis.title.y = element_text(size = 10))+
theme(legend.position = "none")
g4 <- ggplot(data, aes(x = survived, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
xlab(element_blank()) +
theme_classic()+
ggplot2::theme(axis.title.y = element_text(size = 10))+
ggplot2::theme(legend.position = "none")
g4 <- ggplot(data, aes(x = survived, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
xlab(element_blank()) +
theme_classic()+
ggplot2::theme(axis.title.y = element_text(size = 10),
legend.position = "none")
legend <- get_legend(g4)
# arrange multi plot
ggarrange(g1, g2, g3, g4, legend,
ncol = 2, nrow = 3,
labels = c("A", "B", "C", "D"))
# default theme options for all plots
theme <- function(){
list(
geom_violin(),
geom_point(),
facet_wrap(~period),
xlab(element_blank()),
theme_classic(),
ggplot2::theme(axis.title.y = element_text(size = 10))
)
}
# list of plots
g1 <- ggplot(data, aes(survived, latency))+
ylab("Latency to reach food (s)")+
theme()
g2 <- ggplot(data, aes(survived, alert))+
ylab("Time spent alert %")+
theme()
g3 <- ggplot(data, aes(survived, weight))+
ylab("Pre-release weight (g)")+
theme()
g4 <- ggplot(data, aes(x = survived, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
xlab(element_blank()) +
theme_classic()+
ggplot2::theme(axis.title.y = element_text(size = 10),
legend.position = "none")
legend <- get_legend(g4)
# arrange multi plot
ggarrange(g1, g2, g3, g4, legend,
ncol = 2, nrow = 3,
labels = c("A", "B", "C", "D"))
# arrange multi plot
ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 3,
labels = c("A", "B", "C", "D"),
common.legend = TRUE,
legend = "bottom")
# arrange multi plot
ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2,
labels = c("A", "B", "C", "D"),
common.legend = TRUE,
legend = "bottom")
hjust = 1, x = 0, face = "italic", size = 10),
# arrange multi plot
ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2,
labels = c("A", "B", "C", "D"),
common.legend = TRUE,
legend = "bottom") %>%
annotate_figure(bottom = text_grob("Survival: 0 = died, 1 = survived", hjust = 1, x = 0, face = "italic", size = 10))
annotate_figure(fig1,
bottom = text_grob("Survival: 0 = died, 1 = survived",
hjust = 1, x = 0, face = "italic", size = 10))
# arrange multi plot
fig1 <- ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2,
labels = c("A", "B", "C", "D"),
common.legend = TRUE,
legend = "bottom")
annotate_figure(fig1,
bottom = text_grob("Survival: 0 = died, 1 = survived",
hjust = 1, x = 0, face = "italic", size = 10))
annotate_figure(fig1,
bottom = text_grob("Survival: 0 = died, 1 = survived",
hjust = 1, x = 1, face = "italic", size = 10))
annotate_figure(fig1,
bottom = text_grob("Survival: 0 = died, 1 = survived",
hjust = 0, x = 0, face = "italic", size = 10))
annotate_figure(fig1,
bottom = text_grob("Survival: 0 = died, 1 = survived",
hjust = 1, x = 0, face = "italic", size = 10))
annotate_figure(fig1,
bottom = text_grob("Survival: 0 = died, 1 = survived",
hjust = 0.1, x = 0, face = "italic", size = 10))
annotate_figure(fig1,
bottom = text_grob("Survival: 0 = died, 1 = survived",
hjust = 0, x = 0, face = "italic", size = 10))
list(
geom_violin(),
geom_point(),
facet_wrap(~period),
xlab(element_blank()),
theme_classic(),
scale_x_discrete(labels = c("Died", "Survived")),
ggplot2::theme(axis.title.y = element_text(size = 10))
)
# default theme options for all plots
theme <- function(){
list(
geom_violin(),
geom_point(),
facet_wrap(~period),
xlab(element_blank()),
theme_classic(),
scale_x_discrete(labels = c("Died", "Survived")),
ggplot2::theme(axis.title.y = element_text(size = 10))
)
}
# default theme options for all plots
theme <- function(){
list(
geom_violin(),
geom_point(),
facet_wrap(~period),
xlab(element_blank()),
theme_classic(),
scale_x_discrete(labels = c("Died", "Survived")),
ggplot2::theme(axis.title.y = element_text(size = 10))
)
}
# list of plots
g1 <- ggplot(data, aes(survived, latency))+
ylab("Latency to reach food (s)")+
theme()
g2 <- ggplot(data, aes(survived, alert))+
ylab("Time spent alert %")+
theme()
g3 <- ggplot(data, aes(survived, weight))+
ylab("Pre-release weight (g)")+
theme()
g4 <- ggplot(data, aes(x = survived, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
xlab(element_blank()) +
theme_classic()+
ggplot2::theme(axis.title.y = element_text(size = 10))
# arrange multi plot
fig1 <- ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2,
labels = c("A", "B", "C", "D"),
common.legend = TRUE,
legend = "bottom")
# arrange multi plot
ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2,
labels = c("A", "B", "C", "D"),
common.legend = TRUE,
legend = "bottom")
g4 <- ggplot(data, aes(x = survived, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
xlab(element_blank()) +
theme_classic()+
scale_x_discrete(labels = c("Died", "Survived"))+
ggplot2::theme(axis.title.y = element_text(size = 10))
# arrange multi plot
ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2,
labels = c("A", "B", "C", "D"),
common.legend = TRUE,
legend = "bottom")
g4 <- ggplot(data, aes(x = survived, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
scale_colour_manual(values = c("#298c8c", "#f1a226"))+
xlab(element_blank()) +
theme_classic()+
scale_x_discrete(labels = c("Died", "Survived"))+
ggplot2::theme(axis.title.y = element_text(size = 10))
# arrange multi plot
ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2,
labels = c("A", "B", "C", "D"),
common.legend = TRUE,
legend = "bottom")
# default theme options for all plots
theme <- function(){
list(
geom_violin(),
geom_point(),
facet_wrap(~period),
xlab(element_blank()),
theme_classic(),
scale_x_discrete(labels = c("Died", "Survived")),
ggplot2::theme(axis.title.y = element_text(size = 12))
)
}
# list of plots
g1 <- ggplot(data, aes(survived, latency))+
ylab("Latency to reach food (s)")+
theme()
g2 <- ggplot(data, aes(survived, alert))+
ylab("Time spent alert %")+
theme()
g3 <- ggplot(data, aes(survived, weight))+
ylab("Pre-release weight (g)")+
theme()
g4 <- ggplot(data, aes(x = survived, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
scale_colour_manual(values = c("#298c8c", "#f1a226"))+
xlab(element_blank()) +
theme_classic()+
scale_x_discrete(labels = c("Died", "Survived"))+
ggplot2::theme(axis.title.y = element_text(size = 12))
# arrange multi plot
ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2,
labels = c("A", "B", "C", "D"),
common.legend = TRUE,
legend = "bottom")
# default theme options for all plots
theme <- function(){
list(
geom_violin(),
geom_point(),
facet_wrap(~period),
xlab(element_blank()),
theme_classic(),
scale_x_discrete(labels = c("Died", "Survived")),
ggplot2::theme(axis.title.y = element_text(size = 11))
)
}
# list of plots
g1 <- ggplot(data, aes(survived, latency))+
ylab("Latency to reach food (s)")+
theme()
g2 <- ggplot(data, aes(survived, alert))+
ylab("Time spent alert %")+
theme()
g3 <- ggplot(data, aes(survived, weight))+
ylab("Pre-release weight (g)")+
theme()
g4 <- ggplot(data, aes(x = survived, y = weight, color = sex)) +
ylab("Pre-release weight (g)") +
geom_violin(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
geom_point(aes(group = interaction(survived, sex, period)),
position = position_dodge(width = 0.9)) +
facet_wrap(~period) +
scale_colour_manual(values = c("#298c8c", "#f1a226"))+
xlab(element_blank()) +
theme_classic()+
scale_x_discrete(labels = c("Died", "Survived"))+
ggplot2::theme(axis.title.y = element_text(size = 11))
# arrange multi plot
ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2,
labels = c("A", "B", "C", "D"),
common.legend = TRUE,
legend = "bottom")
