scale_x_continuous(breaks = c(0,1), labels = c(FALSE, TRUE))
# Plot for paper
ggplot(data, aes(x= sex, y=weight, group = sex))+
geom_violin()+
geom_point(size = 2)+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
facet_wrap(~to_360)+
theme(panel.grid.minor = element_blank())+
scale_x_continuous(breaks = c(0,1), labels = c(FALSE, TRUE))
# Plot for paper
ggplot(data, aes(x= sex, y = weight, group = sex))+
geom_violin()+
geom_point(size = 2)+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
facet_wrap(~to_360)+
theme(panel.grid.minor = element_blank())+
scale_x_continuous(breaks = c(0,1), labels = c(FALSE, TRUE))
# Plot for paper
ggplot(data, aes(x= sex, y = weight))+
geom_violin()+
geom_point(size = 2)+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
facet_wrap(~to_360)+
theme(panel.grid.minor = element_blank())+
scale_x_continuous(breaks = c(0,1), labels = c(FALSE, TRUE))
# Plot for paper
ggplot(data, aes(x= as.factor(sex), y = weight))+
geom_violin()+
geom_point(size = 2)+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
facet_wrap(~to_360)+
theme(panel.grid.minor = element_blank())+
scale_x_continuous(breaks = c(0,1), labels = c(FALSE, TRUE))
# Plot for paper
ggplot(data, aes(x= to_360, y=weight, group=to_360, fill = sex))+
geom_violin()+
geom_point(size = 2)+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank())+
scale_x_continuous(breaks = c(0,1), labels = c(FALSE, TRUE))
# Plot for paper
ggplot(data, aes(x= to_360, y=weight, group=to_360, colour = sex))+
geom_violin()+
geom_point(size = 2)+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank())+
scale_x_continuous(breaks = c(0,1), labels = c(FALSE, TRUE))
# Plot for paper
ggplot(data, aes(x= to_360, y=weight, group=to_360, colour = sex))+
geom_violin()+
geom_point(size = 2)+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
facet_wrap(~sex)+
theme(panel.grid.minor = element_blank())+
scale_x_continuous(breaks = c(0,1), labels = c(FALSE, TRUE))
# Plot for paper
ggplot(data, aes(y=weight, colour = to_360, group = sex))+
geom_violin()+
geom_point(size = 2)+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank())+
scale_x_continuous(breaks = c(0,1), labels = c(FALSE, TRUE))
# Plot for paper
ggplot(data)+
geom_violin(aes(y=weight, colour = to_360, group = sex))+
geom_point(aes(x= sex, y=weight, colour = to_360), size = 2)+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank())+
scale_x_continuous(breaks = c(0,1), labels = c(FALSE, TRUE))
# Plot for paper
ggplot(data)+
geom_violin(aes(y=weight, colour = to_360, group = sex))+
geom_point(aes(x= sex, y=weight, colour = to_360), size = 2)+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank())
# Plot for paper
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour = to_360, group = sex))+
geom_point(aes(x= sex, y=weight, colour = to_360), size = 2)+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank())
# Plot for paper
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour = as.factor(to_360), group = sex))+
geom_point(aes(x= sex, y=weight, colour = to_360), size = 2)+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank())
# Plot for paper
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour = as.factor(to_360), group = sex))+
geom_point(aes(x= sex, y=weight, colour = as.factor(to_360))), size = 2)+
# Plot for paper
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour = as.factor(to_360), group = sex))+
geom_point(aes(x= sex, y=weight, colour = as.factor(to_360)), size = 2)+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank())
# Plot for paper
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour = as.factor(to_360), group = sex))+
geom_point(aes(x= sex, y=weight, colour = as.factor(to_360)), size = 2)+
facet_wrap(~to_360)
# Plot for paper
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour =  sex))+
geom_point(aes(x= sex, y=weight, colour = sex), size = 2)+
facet_wrap(~to_360)
# Plot for paper
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour =  sex))+
geom_point(aes(x= sex, y=weight, colour = sex), size = 2)+
facet_wrap(~to_360)+
theme_minimal()+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank())
# Plot for paper
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour =  sex))+
geom_point(aes(x= sex, y=weight, colour = sex), size = 2)+
facet_wrap(~to_360)+
theme_bql()+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank())
# Plot for paper
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour =  sex))+
geom_point(aes(x= sex, y=weight, colour = sex), size = 2)+
facet_wrap(~to_360)+
theme_bw()+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank())
# Plot for paper
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour =  sex))+
geom_point(aes(x= sex, y=weight, colour = sex), size = 2)+
facet_wrap(~to_360)+
theme_bw()+
labs(x= element_blank(),
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank())
# Plot for paper
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour =  sex))+
geom_point(aes(x= sex, y=weight, colour = sex), size = 2)+
facet_wrap(~to_360)+
theme_bw()+
labs(x= element_blank(),
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank(),
axis.text.x= element_blank())
# Plot for paper
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour =  sex))+
geom_point(aes(x= sex, y=weight, colour = sex), size = 2)+
facet_wrap(~to_360)+
theme_bw()+
labs(x= element_blank(),
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank(),
axis.text.x= element_blank(),
axis.ticks = element_blank()))
# Plot for paper
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour =  sex))+
geom_point(aes(x= sex, y=weight, colour = sex), size = 2)+
facet_wrap(~to_360)+
theme_bw()+
labs(x= element_blank(),
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank(),
axis.text.x= element_blank(),
axis.ticks = element_blank())
# Plot for paper
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour =  sex))+
geom_point(aes(x= sex, y=weight, colour = sex), size = 2)+
facet_wrap(~to_360,
labeller = c("False", "True"))+
theme_bw()+
labs(x= element_blank(),
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank(),
axis.text.x= element_blank(),
axis.ticks = element_blank())
# Plot for paper
data$to_360 <- factor(data$to_360, labels = c("False", "True"))
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour =  sex))+
geom_point(aes(x= sex, y=weight, colour = sex), size = 2)+
facet_wrap(~to_360,
labeller = label_value))+
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour =  sex))+
geom_point(aes(x= sex, y=weight, colour = sex), size = 2)+
facet_wrap(~to_360,
labeller = label_value)+
theme_bw()+
labs(x= element_blank(),
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank(),
axis.text.x= element_blank(),
axis.ticks = element_blank())
# Plot for paper
data$to_360 <- factor(data$to_360, labels = c("Survived: False", "Survived: True"))
ggplot(data)+
geom_violin(aes(x = sex, y=weight, colour =  sex))+
geom_point(aes(x= sex, y=weight, colour = sex), size = 2)+
facet_wrap(~to_360,
labeller = label_value)+
theme_bw()+
labs(x= element_blank(),
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank(),
axis.text.x= element_blank(),
axis.ticks = element_blank())
# Plot for paper
ggplot(data)+
geom_violin(aes(x = to_360, y=weight, colour =  sex))+
geom_point(aes(x= to_360, y=weight, colour = sex), size = 2)+
facet_wrap(~sex)+
theme_bw()+
labs(x= element_blank(),
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank(),
axis.text.x= element_blank(),
axis.ticks = element_blank())
# Plot for paper
ggplot(data)+
geom_violin(aes(x = to_360, y=weight, colour =  sex))+
geom_point(aes(x= to_360, y=weight, colour = sex), size = 2)+
facet_wrap(~sex)+
theme_bw()+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank(),
legend.position = element_blank())
# Plot for paper
ggplot(data)+
geom_violin(aes(x = to_360, y=weight, colour =  sex))+
geom_point(aes(x= to_360, y=weight, colour = sex), size = 2)+
facet_wrap(~sex)+
theme_bw()+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank(),
legend.position = element_blank())
# Plot for paper
ggplot(data)+
geom_violin(aes(x = to_360, y=weight, colour =  sex))+
geom_point(aes(x= to_360, y=weight, colour = sex), size = 2)+
facet_wrap(~sex)+
theme_bw()+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank(),
legend.position = "none")
# Plot for paper
data$to_360 <- as.factor(data$to_360, labels = c(FALSE, TRUE))
# Plot for paper
data$to_360 <- as.factor(data$to_360, labels = c("FALSE", "TRUE"))
# Plot for paper
data$to_360 <- factor(data$to_360, labels = c("FALSE", "TRUE"))
ggplot(data)+
geom_violin(aes(x = to_360, y=weight, colour =  sex))+
geom_point(aes(x= to_360, y=weight, colour = sex), size = 2)+
facet_wrap(~sex)+
theme_bw()+
labs(x= "Survival to 1 year post-release",
y = "Pre-release weight")+
theme(panel.grid.minor = element_blank(),
legend.position = "none")
View(data)
View(mlatency)
View(weights)
View(handling)
View(data)
View(data)
m0 <- glm(bird ~ latency + score + alert,
data = data)
m0 <- glm(as.factor(bird) ~ latency + score + alert,
data = data)
m0 <- glm(latency ~ score + bird,
data = data)
summary(m0)
m0 <- glm(score ~ latency + bird,
data = data)
summary(m0)
m0 <- glm(score ~ behaviour + bird,
data = data)
View(data)
m0 <- glm(score ~ alert + bird,
data = data)
summary(m0)
m0 <- glm(score ~ alert,
data = data)
summary(m0)
m0 <- glm(score ~ alert + latency,
data = data)
summary(m0)
m0 <- glm(score ~ alert * latency,
data = data)
summary(m0)
citation(glm)
citation("glm")
??glm
?glm
citation("stats")
?km
?survfit
citation("survival")
# Survival probability
exp(coef(m2a))
summary(m2a)
confint(m2a)
confint(m3a)
confint(m2b)
confint(m3b)
confint(m5a)
confint(m5b)
# Comparison for 90 day period
AICc(m1a, m2a, m3a, m4a, m5a)
# Load packages
pacman::p_load(beepr, contsurvplot, ggpubr, janitor, MuMIn, performance, readxl, sjPlot, survival, survminer, tidyverse)
# Comparison for 90 day period
AICc(m1a, m2a, m3a, m4a, m5a)
## Chisq test
chisq.test(table(data$to_90, data$score))
## Chisq test
chisq.test(table(data$to_360, data$score))
## Logistic regression with binomial family
m3b <- glm(to_360 ~ score,
data = data,
family = binomial())
summary(m3b)
# Comparison for 90 day period
AICc(m1a, m2a, m3a, m4a, m5a)
# Comparison for 1 year period
AICc(m1b, m2b, m3b, m4b, m5b)
citation(AICc)
?aicc
?AICc
## Chisq test
m3a <- chisq.test(table(data$to_90, data$score))
## Chisq test
m3b <- chisq.test(table(data$to_360, data$score))
# Comparison for 90 day period
AICc(m1a, m2a, m3a, m4a, m5a)
# Comparison for 90 day period
AICc(m1a, m2a, m4a, m5a)
# Comparison for 1 year period
AICc(m1b, m2b, m4b, m5b)
summary(m1a)
summary(m1b)
# Test effect of alert behaviour - log rank test
summary(m11)
m11
# Test effect of alert behaviour - log rank test
summary(m11)
# Load packages
pacman::p_load(beepr, contsurvplot, ggpubr, janitor, MuMIn, performance, readxl, sjPlot, survival, survminer, tidyverse)
# Test effect of alert behaviour - log rank test
summary(m11)
summary(m2a)
summary(m2b)
# Test effect of latency - log rank test
summary(m10)
## Chisq test
m3a <- chisq.test(table(data$to_90, data$score))
m3a
summary(m3a)
## Chisq test
m3b <- chisq.test(table(data$to_360, data$score))
m3b
summary(m7)
# Test the difference between these survival curves
survdiff(Surv(time, status) ~ score, km)
# Test the difference between these survival curves
survdiff(Surv(time, status) ~ sex, km)
summary(m8)
# Test the difference between these survival curves
survdiff(Surv(time, status) ~ condition, km)
# Kaplan Meyer Plot
ggsurvplot(m6, data = km, risk.table = FALSE,
gtheme = theme_bw(),
censor = FALSE,
xlab = "Days post-release",
ylab = "Survival",
xlim = c(0,360),
palette = "grey20",
conf.int = FALSE)
# Estimated survival probabilities
summary(m6, times = c(1,90, 180, 270, 360))
# Test the difference between these survival curves
survdiff(Surv(time, status) ~ score, km)
# Test the difference between these survival curves
survdiff(Surv(time, status) ~ score, km)
summary(m7)
# Fit a survival model with latency as the continuous variable
m10 <- coxph(Surv(time, status) ~ sqrt(latency), km, x= TRUE)
# Plot the survival area
plot_surv_area(model = m10, data = km,
time = "time", status = "status", variable = "latency", group = NULL)
# Plot the survival area
plot_surv_area(model = m10, data = km,
time = "time", status = "status", variable = "latency", group = NULL)
install.packages('pammtools')
# Plot the survival area
plot_surv_area(model = m10, data = km,
time = "time", status = "status", variable = "latency", group = NULL)
# Test effect of latency - log rank test
summary(m10)
# Test the difference between these survival curves
survdiff(Surv(time, status) ~ sex, km)
summary(m5a)
summary(m5b)
# Test effect of alert behaviour - log rank test
summary(m13)
m13
survdiff(Surv(time, status) ~ weight * sex, km, x= TRUE))
survdiff(Surv(time, status) ~ weight * sex, km, x= TRUE)
survdiff(Surv(time, status) ~ weight * sex, km)
survdiff(Surv(time, status) ~ weight * sex, data = km)
survdiff(m13)
# Test effect of sex and weight
summary(m13)
survdiff(Surv(time, status) ~ weight * sex, km)
survdiff(Surv(time, status) ~ sex, km)
# Test effect of sex and weight
summary(m13)
# likelihood ratio test
m13
# likelihood ratio test
m13
# likelihood ratio test
summary(m13)
# Test the difference between these survival curves - log rank test
survdiff(Surv(time, status) ~ score, km)
summary(m7)
# Test the difference between these survival curves - log rank test
survdiff(Surv(time, status) ~ sex, km)
summary(m8)
# Test the difference between these survival curves - log rank test
survdiff(Surv(time, status) ~ sex, km)
# Test the difference between these survival curves
survdiff(Surv(time, status) ~ condition, km)
# Test effect of latency - log rank test
summary(m10)
# Test the difference between these survival curves - log rank test
survdiff(Surv(time, status) ~ sqrt(latency), km)
summary(m9)
# Test as a Cox Proportional Hazard model
m9 <- coxph(Surv(time, status) ~ condition, km)
summary(m9)
# Test effect of latency - log rank test
summary(m10)
summary(m9)
# Test effect of alert behaviour - log rank test
summary(m11)
# Test effect of latency - log rank test
summary(m10)
# Test effect of weight - log rank test
summary(m12)
# log rank test
summary(m13)
# Fit a survival model with weight and sex
m13 <- coxph(Surv(time, status) ~ sex * weight, km, x= TRUE)
# log rank test
summary(m13)
# Plot the survival area
plot_surv_area(model = m13, data = km,
time = "time", status = "status", variable = "weight", group = "sex")
# Fit a survival model with sex as the grouping variable
km8 <- survfit(Surv(time, status) ~ sex, km)
# Test the difference between these survival curves - log rank test
survdiff(Surv(time, status) ~ sex, km)
km8
summary(km8)
summary(m8)
# Test the difference between these survival curves - log rank test
survdiff(Surv(time, status) ~ sex, km)
# log rank test
summary(m13)
# Fit a survival model with weight and sex
m13 <- survfit(Surv(time, status) ~ sex * weight, km, x= TRUE)
# Fit a survival model with weight and sex
m13 <- coxph(Surv(time, status) ~ sex * weight, km, x= TRUE)
# Plot the survival area
plot_surv_area(model = m13, data = km,
time = "time", status = "status", variable = "weight", group = "sex")
# log rank test
summary(m13)
m13
summary(m13)
summary(m7)
# Test effect of alert behaviour - log rank test
summary(m11)
